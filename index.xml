<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introducción on Computación visual</title><link>https://gapuentesr.github.io/VisualComputing/</link><description>Recent content in Introducción on Computación visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gapuentesr.github.io/VisualComputing/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://gapuentesr.github.io/VisualComputing/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://gapuentesr.github.io/VisualComputing/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://gapuentesr.github.io/VisualComputing/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://gapuentesr.github.io/VisualComputing/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/1.-Optical-illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/1.-Optical-illusions/</guid><description>1). Vitral # new p5((p5) = { p5.setup = function() { p5.createCanvas(400, 400); }; p5.draw = function() { p5.background(0); p5.stroke(255); p5.noFill(); for(let x = 50; x 2). Blanco # new p5((p5) = { p5.setup = function() { p5.createCanvas(400, 400); }; p5.draw = function() { let x1=0, y1=0, x2=0, y2=0; p5.background(0); p5.stroke(255); //Abajo - Izquierda for(x2=10; x2=0; x2 -=10){ p5.line(400,y1,x2,400); y1 += 10; } //Arriba - Izquierda y1 = 400; for(x2=10; x23).</description></item><item><title/><link>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.4.1&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title/><link>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gapuentesr.github.io/VisualComputing/docs/shortcodes/Ilusiones-%C3%B3pticas/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.4.1&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item></channel></rss>